{"version":3,"sources":["utils/API.js","pages/BookDeets.js","pages/Search.js","pages/NoMatch.js","pages/Saved.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","searchGoogle","query","concat","BookDeets","props","_props$book","book","title","authors","image","subtitle","description","authorsList","join","react_default","a","createElement","Container","Row","className","Col","Button","onClick","onSave","src","alt","Search","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","_useState3","_useState4","search","setSearch","Jumbotron","Form","onSubmit","event","preventDefault","then","res","console","log","data","items","FormGroup","Label","for","Input","name","placeholder","onChange","value","target","length","ListGroup","map","newBook","volumeInfo","imageLinks","thumbnail","previewLink","link","ListGroupItem","key","pages_BookDeets","NoMatch","role","aria-label","Saved","loadBooks","catch","err","useEffect","_id","Link","to","Nav","href","App","BrowserRouter","components_Nav","Switch","Route","exact","path","pages_Search","pages_Saved","pages_NoMatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.59270ff6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst queryUrl = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\nconst key=\"&key=AIzaSyB-FFC9zjAO1D-gzdx03Z4C1zt3Bq5KpaA\";\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n  searchGoogle: function(query) {\r\n      return axios.get(`${queryUrl}${query}${key}`);\r\n  }\r\n};\r\n","import React from 'react'\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\n\r\n// title = { book.volumeInfo.title }\r\n// subtitle = { book.volumeInfo.subtitle }\r\n// authors = { book.volumeInfo.authors }\r\n// image = { book.volumeInfo.imageLinks.thumbnail }\r\n// description = { book.volumeInfo.description }\r\nconst BookDeets = (props) => {\r\n    const {title, authors, image, subtitle, description } = props.book;\r\n    const authorsList = authors.join(\", \");\r\n    return (\r\n        <Container>\r\n            <Row className=\"clearfix\">\r\n                <Col className=\"float-left\">\r\n                    <strong>{title}</strong><br/>\r\n                    {subtitle}<br/>\r\n                    By: {authorsList}\r\n                </Col>\r\n                <Col className=\"float-right\">\r\n                    <Button>View</Button>\r\n                    <Button onClick={props.onSave}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <img src={(image) ? image : \"placehold.it/250x250\"} alt={title} />\r\n                </Col>\r\n                <Col>\r\n                    <p>{description}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default BookDeets;\r\n","import React, { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport { Jumbotron, Container, Form, FormGroup, Label, Input, Button, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport BookDeets from './BookDeets';\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        API.searchGoogle(search).then((res) => {\r\n            console.log(res.data.items);\r\n            setBooks(res.data.items);\r\n        })\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        const { value } = event.target;\r\n        setSearch(value);\r\n    };\r\n\r\n    const handleSave = (book) => {\r\n        API.saveBook(book).then((res) => console.log(\"Book Saved!\"));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1 className=\"display-3\">Google Books Wishlist</h1>\r\n                <p className=\"lead\">Search and save your favorite books!</p>\r\n            </Jumbotron>\r\n            <Container>\r\n                <Form onSubmit={handleFormSubmit}>\r\n                    <h3>Search for books here!</h3>\r\n                    <FormGroup>\r\n                        <Label for=\"bookSearch\">Book</Label>\r\n                        <Input name=\"book\" id=\"bookSearch\" placeholder=\"Cat's Cradle\" onChange={handleInputChange} />\r\n                    </FormGroup>\r\n                    <Button>Search</Button>\r\n                </Form>\r\n            </Container>\r\n            <Container>\r\n\r\n                {books.length ? (\r\n                    <ListGroup>\r\n                        {books.map(book => {\r\n                            let newBook = {\r\n                                title: book.volumeInfo.title,\r\n                                subtitle: book.volumeInfo.subtitle,\r\n                                authors: (book.volumeInfo.authors) ? book.volumeInfo.authors : [],\r\n                                image: (book.volumeInfo.imageLinks) ? book.volumeInfo.imageLinks.thumbnail : book.volumeInfo.previewLink,\r\n                                description: (book.volumeInfo.description) ? book.volumeInfo.description : \"\",\r\n                                link: book.volumeInfo.previewLink\r\n                            }\r\n                               return (\r\n                                <ListGroupItem key={book.id}>\r\n                                <BookDeets \r\n                                    book={newBook} \r\n                                    onSave={() => handleSave(newBook)} />\r\n                            </ListGroupItem>\r\n                        )} )}\r\n                        </ListGroup>\r\n                ) : (\r\n                        <h3>No Results to Display</h3>\r\n                    )\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div className=\"container\">\r\n\r\n    <h1>404 Page Not Found</h1>\r\n    <h1>\r\n      <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n        🙄\r\n      </span>\r\n    </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { useEffect, useState } from 'react';\r\nimport API from '../utils/API';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, ListGroupItem, Container, Button } from 'reactstrap';\r\n\r\n\r\nconst Saved = (props) => {\r\n    //books array holds information on users saved books for displaying and manipulating\r\n    const [books, setBooks] = useState([]);\r\n\r\n    //load saved book on component initialization\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, []);\r\n\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n          .then(res => loadBooks())\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {books.length ? (\r\n                <ListGroup>\r\n                    {books.map(book => (\r\n                        <ListGroupItem key={book._id}>\r\n                            <Link to={\"/books/\" + book._id}>\r\n                                {/* <strong>\r\n                  {book.title} by {book.author}\r\n                </strong> */}\r\n\r\n                            </Link>\r\n                            <Button onClick={() => deleteBook(book._id)} />\r\n                        </ListGroupItem>\r\n                    ))}\r\n                </ListGroup>\r\n            ) : (\r\n                    <h3>No Results to Display</h3>\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Saved;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                Google Books Wishlist\r\n          </a>\r\n            <Link to=\"/\" alt=\"Home\" className=\"text-muted pr-2\">Search</Link>\r\n            <Link to=\"/saved\" alt=\"Saved Books\" className=\"text-muted\">Saved</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Saved from \"./pages/Saved\";\nimport BookDeets from \"./pages/BookDeets\";\nimport Nav from \"./components/Nav/\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n    <Nav />\n      <Switch>\n          <Route exact path={[\"/\", \"/books\"]} >\n            <Search />\n          </Route>\n          <Route exact path=\"/saved\">\n            <Saved />\n          </Route>\n          <Route exact path=\"/books/:id\">\n            <BookDeets />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}